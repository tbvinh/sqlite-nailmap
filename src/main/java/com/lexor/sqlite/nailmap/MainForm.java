/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lexor.sqlite.nailmap;

import java.io.File;

/**
 *
 * @author VinhE7440
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
        
        cmdDoImport.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdCreateDB = new javax.swing.JButton();
        cmdImportExcel = new javax.swing.JButton();
        lblExcel = new javax.swing.JLabel();
        cmdDoImport = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        cmđoExclude = new javax.swing.JButton();
        cmdExportExcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmdCreateDB.setText("Create Database");
        cmdCreateDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCreateDBActionPerformed(evt);
            }
        });

        cmdImportExcel.setText("Import");
        cmdImportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdImportExcelActionPerformed(evt);
            }
        });

        cmdDoImport.setText("Do Import");
        cmdDoImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdDoImportActionPerformed(evt);
            }
        });

        cmđoExclude.setText("Exclude");
        cmđoExclude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmđoExcludeActionPerformed(evt);
            }
        });

        cmdExportExcel.setText("Export Excel");
        cmdExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExportExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmdImportExcel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmdCreateDB)
                            .addComponent(cmdDoImport)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdExportExcel))
                            .addComponent(cmđoExclude))
                        .addGap(0, 223, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdCreateDB)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdImportExcel)
                    .addComponent(lblExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmdDoImport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(cmđoExclude)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(lblStatus))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmdExportExcel)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdCreateDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCreateDBActionPerformed
        NailmapDao dao = new NailmapDao();
        dao.createDatabase("nailmap.db");
    }//GEN-LAST:event_cmdCreateDBActionPerformed

    private void cmdImportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdImportExcelActionPerformed
        NailmapDao dao = new NailmapDao();
        File file = dao.chooseFile(this);
        if(file!=null){
            lblExcel.setText(file.getAbsolutePath());
            cmdDoImport.setEnabled(true);
        }
    }//GEN-LAST:event_cmdImportExcelActionPerformed

    private void cmdDoImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdDoImportActionPerformed
        NailmapDao dao = new NailmapDao();
        dao.doImport("nailmap.db", lblExcel.getText());
    }//GEN-LAST:event_cmdDoImportActionPerformed

    private void cmđoExcludeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmđoExcludeActionPerformed
        NailmapDao dao = new NailmapDao();
        dao.doExclude("nailmap1.db", "nailmap-exclude.db");
        
    }//GEN-LAST:event_cmđoExcludeActionPerformed

    private void cmdExportExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExportExcelActionPerformed
        NailmapDao dao = new NailmapDao();
        dao.exportDb2CSV("nailmap1.db", "nailmap1.csv");
        
    }//GEN-LAST:event_cmdExportExcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCreateDB;
    private javax.swing.JButton cmdDoImport;
    private javax.swing.JButton cmdExportExcel;
    private javax.swing.JButton cmdImportExcel;
    private javax.swing.JButton cmđoExclude;
    private javax.swing.JLabel lblExcel;
    private javax.swing.JLabel lblStatus;
    // End of variables declaration//GEN-END:variables
}
